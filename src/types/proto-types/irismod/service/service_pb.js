// source: irismod/service/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cosmos_base_v1beta1_coin_pb = require('../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.irismod.service.CompactRequest', null, global);
goog.exportSymbol('proto.irismod.service.Params', null, global);
goog.exportSymbol('proto.irismod.service.Pricing', null, global);
goog.exportSymbol('proto.irismod.service.PromotionByTime', null, global);
goog.exportSymbol('proto.irismod.service.PromotionByVolume', null, global);
goog.exportSymbol('proto.irismod.service.Request', null, global);
goog.exportSymbol('proto.irismod.service.RequestContext', null, global);
goog.exportSymbol('proto.irismod.service.RequestContextBatchState', null, global);
goog.exportSymbol('proto.irismod.service.RequestContextState', null, global);
goog.exportSymbol('proto.irismod.service.Response', null, global);
goog.exportSymbol('proto.irismod.service.ServiceBinding', null, global);
goog.exportSymbol('proto.irismod.service.ServiceDefinition', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.ServiceDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.ServiceDefinition.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.ServiceDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.ServiceDefinition.displayName = 'proto.irismod.service.ServiceDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.ServiceBinding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.ServiceBinding.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.ServiceBinding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.ServiceBinding.displayName = 'proto.irismod.service.ServiceBinding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.RequestContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.RequestContext.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.RequestContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.RequestContext.displayName = 'proto.irismod.service.RequestContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.Request.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.Request.displayName = 'proto.irismod.service.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.CompactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.CompactRequest.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.CompactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.CompactRequest.displayName = 'proto.irismod.service.CompactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.irismod.service.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.Response.displayName = 'proto.irismod.service.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.Pricing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.Pricing.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.Pricing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.Pricing.displayName = 'proto.irismod.service.Pricing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.PromotionByTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.irismod.service.PromotionByTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.PromotionByTime.displayName = 'proto.irismod.service.PromotionByTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.PromotionByVolume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.irismod.service.PromotionByVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.PromotionByVolume.displayName = 'proto.irismod.service.PromotionByVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.irismod.service.Params = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.irismod.service.Params.repeatedFields_, null);
};
goog.inherits(proto.irismod.service.Params, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.irismod.service.Params.displayName = 'proto.irismod.service.Params';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.ServiceDefinition.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.ServiceDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.ServiceDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.ServiceDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.ServiceDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    author: jspb.Message.getFieldWithDefault(msg, 4, ""),
    authorDescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    schemas: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.ServiceDefinition}
 */
proto.irismod.service.ServiceDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.ServiceDefinition;
  return proto.irismod.service.ServiceDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.ServiceDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.ServiceDefinition}
 */
proto.irismod.service.ServiceDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.ServiceDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.ServiceDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.ServiceDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.ServiceDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAuthorDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSchemas();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.irismod.service.ServiceDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.irismod.service.ServiceDefinition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.irismod.service.ServiceDefinition.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string author = 4;
 * @return {string}
 */
proto.irismod.service.ServiceDefinition.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string author_description = 5;
 * @return {string}
 */
proto.irismod.service.ServiceDefinition.prototype.getAuthorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setAuthorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string schemas = 6;
 * @return {string}
 */
proto.irismod.service.ServiceDefinition.prototype.getSchemas = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceDefinition} returns this
 */
proto.irismod.service.ServiceDefinition.prototype.setSchemas = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.ServiceBinding.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.ServiceBinding.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.ServiceBinding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.ServiceBinding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.ServiceBinding.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 2, ""),
    depositList: jspb.Message.toObjectList(msg.getDepositList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    pricing: jspb.Message.getFieldWithDefault(msg, 4, ""),
    qos: jspb.Message.getFieldWithDefault(msg, 5, 0),
    options: jspb.Message.getFieldWithDefault(msg, 6, ""),
    available: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    disabledTime: (f = msg.getDisabledTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.ServiceBinding}
 */
proto.irismod.service.ServiceBinding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.ServiceBinding;
  return proto.irismod.service.ServiceBinding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.ServiceBinding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.ServiceBinding}
 */
proto.irismod.service.ServiceBinding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addDeposit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPricing(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQos(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDisabledTime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.ServiceBinding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.ServiceBinding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.ServiceBinding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.ServiceBinding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDepositList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getPricing();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getQos();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getOptions();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDisabledTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.irismod.service.ServiceBinding.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string provider = 2;
 * @return {string}
 */
proto.irismod.service.ServiceBinding.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin deposit = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.ServiceBinding.prototype.getDepositList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
*/
proto.irismod.service.ServiceBinding.prototype.setDepositList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.ServiceBinding.prototype.addDeposit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.clearDepositList = function() {
  return this.setDepositList([]);
};


/**
 * optional string pricing = 4;
 * @return {string}
 */
proto.irismod.service.ServiceBinding.prototype.getPricing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setPricing = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 qos = 5;
 * @return {number}
 */
proto.irismod.service.ServiceBinding.prototype.getQos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setQos = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string options = 6;
 * @return {string}
 */
proto.irismod.service.ServiceBinding.prototype.getOptions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setOptions = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool available = 7;
 * @return {boolean}
 */
proto.irismod.service.ServiceBinding.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp disabled_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.irismod.service.ServiceBinding.prototype.getDisabledTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
*/
proto.irismod.service.ServiceBinding.prototype.setDisabledTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.clearDisabledTime = function() {
  return this.setDisabledTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.irismod.service.ServiceBinding.prototype.hasDisabledTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string owner = 9;
 * @return {string}
 */
proto.irismod.service.ServiceBinding.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.ServiceBinding} returns this
 */
proto.irismod.service.ServiceBinding.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.RequestContext.repeatedFields_ = [2,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.RequestContext.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.RequestContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.RequestContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.RequestContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    providersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    consumer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    input: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceFeeCapList: jspb.Message.toObjectList(msg.getServiceFeeCapList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    moduleName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 7, 0),
    superMode: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    repeated: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    repeatedFrequency: jspb.Message.getFieldWithDefault(msg, 10, 0),
    repeatedTotal: jspb.Message.getFieldWithDefault(msg, 11, 0),
    batchCounter: jspb.Message.getFieldWithDefault(msg, 12, 0),
    batchRequestCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    batchResponseCount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    batchResponseThreshold: jspb.Message.getFieldWithDefault(msg, 15, 0),
    responseThreshold: jspb.Message.getFieldWithDefault(msg, 16, 0),
    batchState: jspb.Message.getFieldWithDefault(msg, 17, 0),
    state: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.RequestContext}
 */
proto.irismod.service.RequestContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.RequestContext;
  return proto.irismod.service.RequestContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.RequestContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.RequestContext}
 */
proto.irismod.service.RequestContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addProviders(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInput(value);
      break;
    case 5:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addServiceFeeCap(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModuleName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuperMode(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRepeated(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRepeatedFrequency(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRepeatedTotal(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBatchCounter(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBatchRequestCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBatchResponseCount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBatchResponseThreshold(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponseThreshold(value);
      break;
    case 17:
      var value = /** @type {!proto.irismod.service.RequestContextBatchState} */ (reader.readEnum());
      msg.setBatchState(value);
      break;
    case 18:
      var value = /** @type {!proto.irismod.service.RequestContextState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.RequestContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.RequestContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.RequestContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.RequestContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInput();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceFeeCapList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getModuleName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSuperMode();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getRepeated();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getRepeatedFrequency();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getRepeatedTotal();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getBatchCounter();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getBatchRequestCount();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getBatchResponseCount();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getBatchResponseThreshold();
  if (f !== 0) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = message.getResponseThreshold();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getBatchState();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.irismod.service.RequestContext.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string providers = 2;
 * @return {!Array<string>}
 */
proto.irismod.service.RequestContext.prototype.getProvidersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setProvidersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.addProviders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.clearProvidersList = function() {
  return this.setProvidersList([]);
};


/**
 * optional string consumer = 3;
 * @return {string}
 */
proto.irismod.service.RequestContext.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setConsumer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string input = 4;
 * @return {string}
 */
proto.irismod.service.RequestContext.prototype.getInput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setInput = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin service_fee_cap = 5;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.RequestContext.prototype.getServiceFeeCapList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 5));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.RequestContext} returns this
*/
proto.irismod.service.RequestContext.prototype.setServiceFeeCapList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.RequestContext.prototype.addServiceFeeCap = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.clearServiceFeeCapList = function() {
  return this.setServiceFeeCapList([]);
};


/**
 * optional string module_name = 6;
 * @return {string}
 */
proto.irismod.service.RequestContext.prototype.getModuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setModuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 timeout = 7;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool super_mode = 8;
 * @return {boolean}
 */
proto.irismod.service.RequestContext.prototype.getSuperMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setSuperMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool repeated = 9;
 * @return {boolean}
 */
proto.irismod.service.RequestContext.prototype.getRepeated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setRepeated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional uint64 repeated_frequency = 10;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getRepeatedFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setRepeatedFrequency = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 repeated_total = 11;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getRepeatedTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setRepeatedTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 batch_counter = 12;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getBatchCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setBatchCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint32 batch_request_count = 13;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getBatchRequestCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setBatchRequestCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint32 batch_response_count = 14;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getBatchResponseCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setBatchResponseCount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint32 batch_response_threshold = 15;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getBatchResponseThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setBatchResponseThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional uint32 response_threshold = 16;
 * @return {number}
 */
proto.irismod.service.RequestContext.prototype.getResponseThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setResponseThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional RequestContextBatchState batch_state = 17;
 * @return {!proto.irismod.service.RequestContextBatchState}
 */
proto.irismod.service.RequestContext.prototype.getBatchState = function() {
  return /** @type {!proto.irismod.service.RequestContextBatchState} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.irismod.service.RequestContextBatchState} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setBatchState = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional RequestContextState state = 18;
 * @return {!proto.irismod.service.RequestContextState}
 */
proto.irismod.service.RequestContext.prototype.getState = function() {
  return /** @type {!proto.irismod.service.RequestContextState} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.irismod.service.RequestContextState} value
 * @return {!proto.irismod.service.RequestContext} returns this
 */
proto.irismod.service.RequestContext.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.Request.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 3, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    input: jspb.Message.getFieldWithDefault(msg, 5, ""),
    serviceFeeList: jspb.Message.toObjectList(msg.getServiceFeeList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    superMode: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    requestHeight: jspb.Message.getFieldWithDefault(msg, 8, 0),
    expirationHeight: jspb.Message.getFieldWithDefault(msg, 9, 0),
    requestContextId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    requestContextBatchCounter: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.Request}
 */
proto.irismod.service.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.Request;
  return proto.irismod.service.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.Request}
 */
proto.irismod.service.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInput(value);
      break;
    case 6:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addServiceFee(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuperMode(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestHeight(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationHeight(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestContextId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestContextBatchCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInput();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getServiceFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getSuperMode();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getRequestHeight();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getExpirationHeight();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRequestContextId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRequestContextBatchCounter();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service_name = 2;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string provider = 3;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string consumer = 4;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setConsumer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string input = 5;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getInput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setInput = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin service_fee = 6;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.Request.prototype.getServiceFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.Request} returns this
*/
proto.irismod.service.Request.prototype.setServiceFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.Request.prototype.addServiceFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.clearServiceFeeList = function() {
  return this.setServiceFeeList([]);
};


/**
 * optional bool super_mode = 7;
 * @return {boolean}
 */
proto.irismod.service.Request.prototype.getSuperMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setSuperMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int64 request_height = 8;
 * @return {number}
 */
proto.irismod.service.Request.prototype.getRequestHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setRequestHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 expiration_height = 9;
 * @return {number}
 */
proto.irismod.service.Request.prototype.getExpirationHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setExpirationHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string request_context_id = 10;
 * @return {string}
 */
proto.irismod.service.Request.prototype.getRequestContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setRequestContextId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 request_context_batch_counter = 11;
 * @return {number}
 */
proto.irismod.service.Request.prototype.getRequestContextBatchCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Request} returns this
 */
proto.irismod.service.Request.prototype.setRequestContextBatchCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.CompactRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.CompactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.CompactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.CompactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.CompactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestContextId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestContextBatchCounter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    provider: jspb.Message.getFieldWithDefault(msg, 3, ""),
    serviceFeeList: jspb.Message.toObjectList(msg.getServiceFeeList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    requestHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expirationHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.CompactRequest}
 */
proto.irismod.service.CompactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.CompactRequest;
  return proto.irismod.service.CompactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.CompactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.CompactRequest}
 */
proto.irismod.service.CompactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestContextId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestContextBatchCounter(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 4:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addServiceFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.CompactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.CompactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.CompactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.CompactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestContextId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestContextBatchCounter();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServiceFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getRequestHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getExpirationHeight();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string request_context_id = 1;
 * @return {string}
 */
proto.irismod.service.CompactRequest.prototype.getRequestContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.setRequestContextId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 request_context_batch_counter = 2;
 * @return {number}
 */
proto.irismod.service.CompactRequest.prototype.getRequestContextBatchCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.setRequestContextBatchCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string provider = 3;
 * @return {string}
 */
proto.irismod.service.CompactRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin service_fee = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.CompactRequest.prototype.getServiceFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 4));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.CompactRequest} returns this
*/
proto.irismod.service.CompactRequest.prototype.setServiceFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.CompactRequest.prototype.addServiceFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.clearServiceFeeList = function() {
  return this.setServiceFeeList([]);
};


/**
 * optional int64 request_height = 5;
 * @return {number}
 */
proto.irismod.service.CompactRequest.prototype.getRequestHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.setRequestHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 expiration_height = 6;
 * @return {number}
 */
proto.irismod.service.CompactRequest.prototype.getExpirationHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.CompactRequest} returns this
 */
proto.irismod.service.CompactRequest.prototype.setExpirationHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    result: jspb.Message.getFieldWithDefault(msg, 3, ""),
    output: jspb.Message.getFieldWithDefault(msg, 4, ""),
    requestContextId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    requestContextBatchCounter: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.Response}
 */
proto.irismod.service.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.Response;
  return proto.irismod.service.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.Response}
 */
proto.irismod.service.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutput(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestContextId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestContextBatchCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOutput();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequestContextId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRequestContextBatchCounter();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.irismod.service.Response.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer = 2;
 * @return {string}
 */
proto.irismod.service.Response.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setConsumer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string result = 3;
 * @return {string}
 */
proto.irismod.service.Response.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string output = 4;
 * @return {string}
 */
proto.irismod.service.Response.prototype.getOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setOutput = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string request_context_id = 5;
 * @return {string}
 */
proto.irismod.service.Response.prototype.getRequestContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setRequestContextId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 request_context_batch_counter = 6;
 * @return {number}
 */
proto.irismod.service.Response.prototype.getRequestContextBatchCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Response} returns this
 */
proto.irismod.service.Response.prototype.setRequestContextBatchCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.Pricing.repeatedFields_ = [6,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.Pricing.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.Pricing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.Pricing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Pricing.toObject = function(includeInstance, msg) {
  var f, obj = {
    priceList: jspb.Message.toObjectList(msg.getPriceList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    promotionsByTimeList: jspb.Message.toObjectList(msg.getPromotionsByTimeList(),
    proto.irismod.service.PromotionByTime.toObject, includeInstance),
    promotionsByVolumeList: jspb.Message.toObjectList(msg.getPromotionsByVolumeList(),
    proto.irismod.service.PromotionByVolume.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.Pricing}
 */
proto.irismod.service.Pricing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.Pricing;
  return proto.irismod.service.Pricing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.Pricing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.Pricing}
 */
proto.irismod.service.Pricing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addPrice(value);
      break;
    case 2:
      var value = new proto.irismod.service.PromotionByTime;
      reader.readMessage(value,proto.irismod.service.PromotionByTime.deserializeBinaryFromReader);
      msg.addPromotionsByTime(value);
      break;
    case 3:
      var value = new proto.irismod.service.PromotionByVolume;
      reader.readMessage(value,proto.irismod.service.PromotionByVolume.deserializeBinaryFromReader);
      msg.addPromotionsByVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.Pricing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.Pricing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.Pricing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Pricing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getPromotionsByTimeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.irismod.service.PromotionByTime.serializeBinaryToWriter
    );
  }
  f = message.getPromotionsByVolumeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.irismod.service.PromotionByVolume.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.Coin price = 6;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.Pricing.prototype.getPriceList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.Pricing} returns this
*/
proto.irismod.service.Pricing.prototype.setPriceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.Pricing.prototype.addPrice = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.Pricing} returns this
 */
proto.irismod.service.Pricing.prototype.clearPriceList = function() {
  return this.setPriceList([]);
};


/**
 * repeated PromotionByTime promotions_by_time = 2;
 * @return {!Array<!proto.irismod.service.PromotionByTime>}
 */
proto.irismod.service.Pricing.prototype.getPromotionsByTimeList = function() {
  return /** @type{!Array<!proto.irismod.service.PromotionByTime>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.irismod.service.PromotionByTime, 2));
};


/**
 * @param {!Array<!proto.irismod.service.PromotionByTime>} value
 * @return {!proto.irismod.service.Pricing} returns this
*/
proto.irismod.service.Pricing.prototype.setPromotionsByTimeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.irismod.service.PromotionByTime=} opt_value
 * @param {number=} opt_index
 * @return {!proto.irismod.service.PromotionByTime}
 */
proto.irismod.service.Pricing.prototype.addPromotionsByTime = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.irismod.service.PromotionByTime, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.Pricing} returns this
 */
proto.irismod.service.Pricing.prototype.clearPromotionsByTimeList = function() {
  return this.setPromotionsByTimeList([]);
};


/**
 * repeated PromotionByVolume promotions_by_volume = 3;
 * @return {!Array<!proto.irismod.service.PromotionByVolume>}
 */
proto.irismod.service.Pricing.prototype.getPromotionsByVolumeList = function() {
  return /** @type{!Array<!proto.irismod.service.PromotionByVolume>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.irismod.service.PromotionByVolume, 3));
};


/**
 * @param {!Array<!proto.irismod.service.PromotionByVolume>} value
 * @return {!proto.irismod.service.Pricing} returns this
*/
proto.irismod.service.Pricing.prototype.setPromotionsByVolumeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.irismod.service.PromotionByVolume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.irismod.service.PromotionByVolume}
 */
proto.irismod.service.Pricing.prototype.addPromotionsByVolume = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.irismod.service.PromotionByVolume, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.Pricing} returns this
 */
proto.irismod.service.Pricing.prototype.clearPromotionsByVolumeList = function() {
  return this.setPromotionsByVolumeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.PromotionByTime.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.PromotionByTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.PromotionByTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.PromotionByTime.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    discount: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.PromotionByTime}
 */
proto.irismod.service.PromotionByTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.PromotionByTime;
  return proto.irismod.service.PromotionByTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.PromotionByTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.PromotionByTime}
 */
proto.irismod.service.PromotionByTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.PromotionByTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.PromotionByTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.PromotionByTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.PromotionByTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDiscount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.irismod.service.PromotionByTime.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.irismod.service.PromotionByTime} returns this
*/
proto.irismod.service.PromotionByTime.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.irismod.service.PromotionByTime} returns this
 */
proto.irismod.service.PromotionByTime.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.irismod.service.PromotionByTime.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.irismod.service.PromotionByTime.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.irismod.service.PromotionByTime} returns this
*/
proto.irismod.service.PromotionByTime.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.irismod.service.PromotionByTime} returns this
 */
proto.irismod.service.PromotionByTime.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.irismod.service.PromotionByTime.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string discount = 3;
 * @return {string}
 */
proto.irismod.service.PromotionByTime.prototype.getDiscount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.PromotionByTime} returns this
 */
proto.irismod.service.PromotionByTime.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.PromotionByVolume.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.PromotionByVolume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.PromotionByVolume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.PromotionByVolume.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: jspb.Message.getFieldWithDefault(msg, 1, 0),
    discount: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.PromotionByVolume}
 */
proto.irismod.service.PromotionByVolume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.PromotionByVolume;
  return proto.irismod.service.PromotionByVolume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.PromotionByVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.PromotionByVolume}
 */
proto.irismod.service.PromotionByVolume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVolume(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.PromotionByVolume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.PromotionByVolume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.PromotionByVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.PromotionByVolume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolume();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDiscount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 volume = 1;
 * @return {number}
 */
proto.irismod.service.PromotionByVolume.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.PromotionByVolume} returns this
 */
proto.irismod.service.PromotionByVolume.prototype.setVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string discount = 2;
 * @return {string}
 */
proto.irismod.service.PromotionByVolume.prototype.getDiscount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.PromotionByVolume} returns this
 */
proto.irismod.service.PromotionByVolume.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.irismod.service.Params.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.irismod.service.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.irismod.service.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.irismod.service.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxRequestTimeout: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minDepositMultiple: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minDepositList: jspb.Message.toObjectList(msg.getMinDepositList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    serviceFeeTax: jspb.Message.getFieldWithDefault(msg, 4, ""),
    slashFraction: jspb.Message.getFieldWithDefault(msg, 5, ""),
    complaintRetrospect: (f = msg.getComplaintRetrospect()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    arbitrationTimeLimit: (f = msg.getArbitrationTimeLimit()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    txSizeLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    baseDenom: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.irismod.service.Params}
 */
proto.irismod.service.Params.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.irismod.service.Params;
  return proto.irismod.service.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.irismod.service.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.irismod.service.Params}
 */
proto.irismod.service.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxRequestTimeout(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinDepositMultiple(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addMinDeposit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceFeeTax(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlashFraction(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setComplaintRetrospect(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setArbitrationTimeLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxSizeLimit(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseDenom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.irismod.service.Params.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.irismod.service.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.irismod.service.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.irismod.service.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxRequestTimeout();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMinDepositMultiple();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMinDepositList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getServiceFeeTax();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSlashFraction();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComplaintRetrospect();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getArbitrationTimeLimit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTxSizeLimit();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getBaseDenom();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional int64 max_request_timeout = 1;
 * @return {number}
 */
proto.irismod.service.Params.prototype.getMaxRequestTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setMaxRequestTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 min_deposit_multiple = 2;
 * @return {number}
 */
proto.irismod.service.Params.prototype.getMinDepositMultiple = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setMinDepositMultiple = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin min_deposit = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.irismod.service.Params.prototype.getMinDepositList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.irismod.service.Params} returns this
*/
proto.irismod.service.Params.prototype.setMinDepositList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.irismod.service.Params.prototype.addMinDeposit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.clearMinDepositList = function() {
  return this.setMinDepositList([]);
};


/**
 * optional string service_fee_tax = 4;
 * @return {string}
 */
proto.irismod.service.Params.prototype.getServiceFeeTax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setServiceFeeTax = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string slash_fraction = 5;
 * @return {string}
 */
proto.irismod.service.Params.prototype.getSlashFraction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setSlashFraction = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Duration complaint_retrospect = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.irismod.service.Params.prototype.getComplaintRetrospect = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.irismod.service.Params} returns this
*/
proto.irismod.service.Params.prototype.setComplaintRetrospect = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.clearComplaintRetrospect = function() {
  return this.setComplaintRetrospect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.irismod.service.Params.prototype.hasComplaintRetrospect = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Duration arbitration_time_limit = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.irismod.service.Params.prototype.getArbitrationTimeLimit = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.irismod.service.Params} returns this
*/
proto.irismod.service.Params.prototype.setArbitrationTimeLimit = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.clearArbitrationTimeLimit = function() {
  return this.setArbitrationTimeLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.irismod.service.Params.prototype.hasArbitrationTimeLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 tx_size_limit = 8;
 * @return {number}
 */
proto.irismod.service.Params.prototype.getTxSizeLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setTxSizeLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string base_denom = 9;
 * @return {string}
 */
proto.irismod.service.Params.prototype.getBaseDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.irismod.service.Params} returns this
 */
proto.irismod.service.Params.prototype.setBaseDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * @enum {number}
 */
proto.irismod.service.RequestContextBatchState = {
  BATCH_RUNNING: 0,
  BATCH_COMPLETED: 1
};

/**
 * @enum {number}
 */
proto.irismod.service.RequestContextState = {
  RUNNING: 0,
  PAUSED: 1,
  COMPLETED: 2
};

goog.object.extend(exports, proto.irismod.service);
